from collections import deque

class Node:
    def __init__(self, name, arc, value, children):
        self.name = name
        self.arc = arc 
        self.value = value
        self.children = children

class Message:
    def __init__(self, name, messageValue):
        self.name = name
        self.messageValue = messageValue

################# Iniciating objects ######################
# no15 = Node("5.8", "none", None, [])

# no14 = Node("5.7", "none", None, [])

# no13 = Node("5.6", "none", None, [])

# no12 = Node("5.5", "none", None, [])

# no11 = Node("5.4", "none", None, [])

# no10 = Node("5.3", "none", None, [])

# no9 = Node("5.2", "none", None, [])

# no8 = Node("5.1", "none", None, [])

# no7 = Node("4.4", "and", None, [no14,no15])

no6 = Node("4.3", "none", None, [])

no5 = Node("4.2", "none", None, [])

no4 = Node("4.1", "none", None, [])

no3 = Node("3.2", "or", None, [no6])

no2 = Node("3.1", "or", None, [no4, no5])

no1 = Node("2.1", "and", None, [no2, no3])


message = Message("4.1", True)

message2 = Message("4.2", True)

message3 = Message("4.3", False)

# message4 = Message("5.4", False)

# message5 = Message("5.5", True)

# message6 = Message("5.6", False)

# message7 = Message("5.7", True)

# message8 = Message("5.8", False)
#############################################################

node_list = [no1, no2, no3, no4, no5, no6]
message_list = [message, message2, message3]
branch_list = []
children_list = []
positives_list = []
leaf_list = []
stack = deque([])
children_values = []
listaTeste = []



############## METHODS ###############
def ExecMessage(message_list, leaf_list):
    for msg in message_list:
            for leaf in leaf_list:
                if msg.name == leaf.name:
                    leaf.value = msg.messageValue



def CheckLastInStack(stack, node):
    print("INICIANDO FUNÇÃO CHECK PARA VALOR DE NO", node.name)
    print("ADICIONANDO NODE NA PILHA", node.name)
    stack.append(node)

    for x in stack:
        print("PILHA CONTEM:", x.name)
    
    if node.value == None:
        print("\n O VALOR TESTADO EH NULO", node.name)

        for filho in node.children:
            print("TESTANDO O FILHO", filho.name)
            if (filho.value != None):
                listaTeste.append("Ok")
            else:
                listaTeste.append("N")
        
        if("N" not in listaTeste):



            
        
    else:
        print("O VALOR DO NO NAO EH NULO", node.name)

        print("ADICIONANDO VALOR DO NO NA LISTA DE VALORES", node.name, node.value)
        children_values.append(node.value)

        print("REMOVENDO ULTIMO DA PILHA", node.name)
        stack.pop()

        for x in stack:
            print("PILHA APOS REMOCAO", x.name)






    # if node not in stack:
    #     stack.append(node)
    #     print("Inicio da funcao ", stack[-1].name)
    #     if node.value == None:
    #         print("depois do if ", stack[-1].name)
    #         for chdr in node.children:
    #             if chdr in leaf_list:
    #                 print("depois do for ", chdr.name)
    #                 CheckLastInStack(stack, chdr)
    #                 break
    #     else:
    #         children_values.append(node.value)
    #         for e in stack:
    #             print("pilha no momento da folha ", e.name)
    #         stack.pop()
    #         leaf_list.remove(node)
            
            
    #         for u in stack:
    #             print("pilha depois do pop ", u.name)
    #         for x in leaf_list:
    #             print("leaf list", x.name)
            
    #         for c in children_values:
    #             print(c)


    # if node in stack:  
    #     if node.value == None:
    #         print("Node in stack, se valor do node for = none ", stack[-1].name)
    #         for chdr in node.children:
    #             print("Entrou no chdr in node.children do node in stack")
    #             if chdr in leaf_list:
    #                 print("Entrou no if chdr in leaf_list do node in stack")
    #                 children_values.append(chdr.value)
    #                 for e in stack:
    #                     print("pilha no momento da folha ", e.name)
    #                 stack.pop()
    #                 leaf_list.remove(chdr)
                    
                    
    #                 for u in stack:
    #                     print("pilha depois do pop ", u.name)
    #                 for x in leaf_list:
    #                     print("leaf list", x.name)
                    
    #                 for c in children_values:
    #                     print(c)
    #             else:
    #                 print("entrou no else do for chdr in node.children", chdr.name)
    #                 CheckLastInStack(stack, chdr)



    

######################################

###Rever essa função depois
while any(item.value == None for item in node_list):
    for node in node_list:
        if len(node.children) == 0:
            leaf_list.append(node)

    ExecMessage(message_list, leaf_list)

    for node in node_list:
        CheckLastInStack(stack, node)
        

        


    
  
      

        
        
        